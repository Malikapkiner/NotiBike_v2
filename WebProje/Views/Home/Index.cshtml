@model IEnumerable<WebProje.Models.Race>
<script src="~/Scripts/manuelscript.js"></script>
<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.3.1.min.js"></script>
<link href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">

<link href="~/Content/manuel.css" rel="stylesheet" />
<style>
   #myTable a {
        text-decoration: none;
        color: forestgreen;
        font-weight:200;
    }
    #myTable a:hover {
        text-decoration: none;
        color: forestgreen;
        text-decoration:underline;
        transition:step-end
    }
    .header {
        color: #E9E9E9;
        background-color: #119A97 !important;
        opacity: 0.9;
    }

    th 
    {
            
        font-weight: 400 !important;

    }
    #myTable{
    }
</style>


<h2 class="text-center">Bisiklet Yarışları ve Festivalleri</h2>

<div id="arama" class="row ">
    <input type="text" id="myInput" onkeyup="myFunction()" onclick="myFunction3()" placeholder="Etkinlik Adı Giriniz.. " title="Type in a name" class="col-2 rounded ">
    @*<i id="search_1" class="material-icons">search</i>*@


</div>
<table id="myTable">
    <tr class="header ">
        <th onclick="sortTable2()" style="width:40%;">Etkinlik Adı<i class="fa fa-fw fa-sort sorti"> </i></th>
        <th onclick="sortTable()" style="width:20%;">Şehir<i class="fa fa-fw fa-sort"> </i></th>
        <th style="width:10%;">Kategori </th>
        <th style="width:10%;"> Tarih </th>
        <th style="width:10%;">Katılım</th>



    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>@item.RaceName</td>
            <td>@item.Location</td>
            <td><p> @item.Category.CategoryName</p></td>
            <td><p> @item.Date.Day/@item.Date.Month/@item.Date.Year</p></td>
            <td><i class="material-icons">@Html.ActionLink("arrow_forward", "Detail", "Race", new { id = item.Id },null)</i></td>
            @*<td> <a href="#"><i class="material-icons">arrow_forward</i></a></td>*@
        </tr>
    }



</table>

<script>

    function myFunction() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }

            }
        }
    }
    function myFunction2() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInput2");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[1];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }

            }
        }
    }
    function myFunction3() {
        input = document.getElementById("myInput");
        input.style.width = "300px";
    }

    $("#myInput").click(function () {

        $("#myInput").addClass("resize");
    });

    function sortTable() {
        var table, rows, switching, i, x, y, shouldSwitch;
        table = document.getElementById("myTable");
        switching = true;
        /* Make a loop that will continue until
        no switching has been done: */
        while (switching) {
            // Start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /* Loop through all table rows (except the
            first, which contains table headers): */
            for (i = 1; i < (rows.length - 1); i++) {
                // Start by saying there should be no switching:
                shouldSwitch = false;
                /* Get the two elements you want to compare,
                one from current row and one from the next: */
                x = rows[i].getElementsByTagName("TD")[1];
                y = rows[i + 1].getElementsByTagName("TD")[1];
                // Check if the two rows should switch place:
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                    // If so, mark as a switch and break the loop:
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                /* If a switch has been marked, make the switch
                and mark that a switch has been done: */
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }

    function sortTable2() {
        var table, rows, switching, i, x, y, shouldSwitch;
        table = document.getElementById("myTable");
        switching = true;
        /* Make a loop that will continue until
        no switching has been done: */
        while (switching) {
            // Start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /* Loop through all table rows (except the
            first, which contains table headers): */
            for (i = 1; i < (rows.length - 1); i++) {
                // Start by saying there should be no switching:
                shouldSwitch = false;
                /* Get the two elements you want to compare,
                one from current row and one from the next: */
                x = rows[i].getElementsByTagName("TD")[0];
                y = rows[i + 1].getElementsByTagName("TD")[0];
                // Check if the two rows should switch place:
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                    // If so, mark as a switch and break the loop:
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                /* If a switch has been marked, make the switch
                and mark that a switch has been done: */
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }




</script>
